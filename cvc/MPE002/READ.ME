    
                     Mini Polymorphic Engine [MPE] v 0.02
                                assembly by
                          KimInWoo/SmartLine/40Hex
    
  ~~~[소개글]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   안녕하세요?
    
   스마트라인의 40Hex동호회의 김인우 입니다.
  
   이번 버젼은 junk코드제너레이터도 넣었습니다.
  
   그런데 간혹 컴퓨터의 상황에 따라서 맛이 가는경우가 있는데
  
   그 이유를 알고 계시거나 고칠수 있는 분은 연락 바랍니다.
  
   정확히 junk코드 제너레이팅 부분에서 폭주해버리는 경우가 있습니다.
  
   바이러스 제작자분들은 예전에 올린 0.01버젼을 되도록 이용해 주시는것이
  
   좋겠습니다.
       
   물론 해커정신에 따라서 소스와 컴파일러가 없는 분을 위해 오브젝트 화일과
    
   실행화일도 올립니다.
    
   질문이나 건의점이 있으신분은 스마트라인 40Hex게시판에 질문을 해주십시요.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
  ~~~[포함 화일]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
     DEMO.ASM  - 데모화일 소스입니다.
     
     DEMO.OBJ  - 데모화일 오브젝트 입니다.
    
     DEMO.COM  - 데모화일 실행화일 입니다.
    
     READ.ME   - 지금 보시는 글입니다.
    
     40HEX.COM - 데모 실행시 나타나는 암호화된 하일입니다.
    
     MPE.ASM   - 폴리모픽 엔진 소스입니다.
    
     MPE.OBJ   - 폴리모픽 엔진 오브젝트입니다.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
  ~~[설명글]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      
      우선 여러분의 바이러스 코드 맨처음에 다음과 같이 입력 하십시요.
  
      extrn          mpe:near,mpeend:near,rndget:near
  
      그리고 바이러스를 쓰기전에 밑의 5개의 레지스터를 세팅한후에
  
      call           mpe
  
      를 해주시면 됩니다.(자세한것은 DEMO.ASM참조)
      
         
      미니 폴리모픽 엔진은 컬링시 5개의 레지스터를 요구합니다.
                        
                       AL     junk코드 생산 여부 00000000b는 no 00000001b는 yes
                       CX     암호화될 길이
                       BP     실행화일의 메모리에서 시작 위치(COM=100h)
                       DS:SI  암호화될곳의 주소
                       ES:DI  암호화된것을 모시는(?) 곳
    
                     Return parameters:
                       CX     암호푸는 시스템의 길이+암호화된 길이
    
    Mini Polymorphic Engine decryptor:
      junk code~
      MOV BX,imm16; MOV DI,imm16; MOV SI,imm16
      MOV CX,imm16
      XOR [BX],imm8; XOR [DI],imm8; XOR [SI],imm8
      CMP BX,imm16; CMP DI,imm16; CMP SI,imm16
      JE imm8
      INC BX; INC DI; INC SI
      JMP imm16
    
      미니 폴리모픽 엔진은 위와 같이 변형을 만듭니다.
    
     decryptor size:            16 bytes에서 부터 ~
    
    Compile Mini Polymorphic Engine with Turbo Assembler v 4.0 by typing:
      TASM /M2 MPE.ASM
    
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
  ~~[주의 사항]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
     주의사항 첫번째: 
                    개조시에는 암호화하는 부분(lodsb~stosb)는 건드리지 않는게 좋
                    습니다.이 엔진을 제작할때 자꾸 암호화되는 5바이트가 이상해서
                    검사를 1시간 가량했는데 프리패치큐가 적용되고 있어서 문제가
                    있었죠.그러니까 위치는 옮기지 마십시요.
              두번째:
                    이 엔진은 Com전용입니다.
                    물론 개조하면 EXE도 쓸수는 있지만 현재는 Com전용입니다.
                    코드를 분석해 보시면 아실겁니다.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
  ~~[끝내는 글]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    프리 패치큐를 막을수 있는 방법을 아시는 분은 연락 바랍니다.
  
    port를 통해 제어가 가능하다면 자세히 알려주시면 고맙겠습니다.
  
    
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    
    
    
    
    